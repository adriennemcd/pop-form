{"version":3,"sources":["Select.js","RadioGroup.js","Form.js","Confirmation.js","App.js","serviceWorker.js","index.js"],"names":["Select","props","ref","className","htmlFor","name","label","isRequired","aria-hidden","id","onChange","handleChange","aria-required","required","aria-describedby","aria-invalid","invalid","value","values","map","option","i","key","displayName","forwardRef","RadioGroup","instructions","type","checked","Form","state","alreadyPlays","yearsPlaying","grade","instrument","hasWorkingInstrument","school","isInPhilly","isReturningStudent","invalidInputs","alreadyPlaysRef","createRef","yearsPlayingRef","gradeRef","instrumentRef","hasWorkingInstrumentRef","schoolRef","isInPhillyRef","isReturningStudentRef","gradeValues","instrumentValues","schoolValues","getEligibility","getDivision","hasWorkingInstrumentOrInPhilly","cleanupState","stateObj","Object","keys","length","setState","validateErrors","inputState","invalidInputsNew","item","current","push","assignPlacement","inPersonEligible","inPersonEligibleReturning","division","link","links","inPersonReturning","inPerson","virtual","e","target","includes","filter","val","handleSubmit","preventDefault","errors","placement","this","onSubmit","noValidate","min","Component","Confirmation","confirmationMessages","ineligible","ieTitle","ineligibility","eligible","title","eligibility1","eligibility2","schedule","register","waitingList","wlTitle","wlEligibility1","wlEligibility2","message","CTA","wlLink","href","waitingListStatus","schedules","days","time","App","window","scroll","top","left","behavior","Boolean","location","hostname","match","ReactDOM","render","StrictMode","rel","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.5c42e960.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\r\n\r\nconst Select = (props, ref) => {\r\n  return (\r\n    <div className='form__item form__item--select'>\r\n      <label className='form__label' htmlFor={props.name}>{props.label}</label>\r\n      {props.isRequired && <span className='form__label' aria-hidden='true'>*</span>}\r\n      <select\r\n        id={props.name}\r\n        className='form__select'\r\n        name={props.name}\r\n        onChange={props.handleChange}\r\n        aria-required={props.isRequired}\r\n        required={props.isRequired}\r\n        ref={ref}\r\n        aria-describedby={`${props.id}-instructions ${props.id}-error`}\r\n        aria-invalid={props.invalid}\r\n      >\r\n        <option className='form__select-option' value=\"\"></option>\r\n        {props.values.map((option, i) =>\r\n          <option key={i+1} className='form__select-option' value={option}>{option}</option>\r\n        )}\r\n      </select>\r\n      {props.invalid && <span id={`${props.id}-error`} className='form__label form__label--error'>This field is required</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nSelect.displayName = 'Select';\r\nexport default forwardRef(Select);","import React, { forwardRef } from 'react';\r\n\r\nconst RadioGroup = (props, ref) => {\r\n\r\n  return (\r\n    <fieldset className='form__item form__item--radio' aria-required={props.isRequired} required={props.isRequired}>\r\n      <legend className='form__legend'>\r\n        {props.label}\r\n        {props.isRequired && <span aria-hidden='true'>*</span>}\r\n      </legend>\r\n      {props.instructions && <span id={`${props.id}-instructions`} className='form__label form__label--instructions'>{props.instructions}</span>}\r\n      {props.values.map((value, i) => \r\n        <div key={i} className='form__radio-button-item'>\r\n          <input\r\n            id={`${props.id}-${i}`}\r\n            className='form__radio-button'\r\n            type=\"radio\"\r\n            name={props.name}\r\n            value={value}\r\n            checked={props.checked === value}\r\n            onChange={props.handleChange}\r\n            ref={ref}\r\n            aria-describedby={`${props.id}-instructions ${props.id}-error`}\r\n            aria-invalid={props.invalid}\r\n          />\r\n          <label className='form__label' htmlFor={`${props.id}-${i}`}>{value}</label>\r\n        </div>\r\n      )}\r\n      {props.invalid && <span id={`${props.id}-error`} className='form__label form__label--error'>This field is required</span>}\r\n    </fieldset>\r\n  );\r\n}\r\n\r\nRadioGroup.displayName = 'RadioGroup';\r\nexport default forwardRef(RadioGroup);","import React, {Component, Fragment, createRef} from 'react';\r\nimport Select from './Select';\r\nimport RadioGroup from './RadioGroup';\r\nimport links from './data/links.json';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    alreadyPlays: null,\r\n    yearsPlaying: '',\r\n    grade: '',\r\n    instrument: '',\r\n    hasWorkingInstrument: null,\r\n    school: '',\r\n    isInPhilly: null,\r\n    isReturningStudent: null,\r\n    invalidInputs: []\r\n  }\r\n\r\n  alreadyPlaysRef = createRef();\r\n  yearsPlayingRef = createRef();\r\n  gradeRef = createRef();\r\n  instrumentRef = createRef();\r\n  hasWorkingInstrumentRef = createRef();\r\n  schoolRef = createRef();\r\n  isInPhillyRef = createRef();\r\n  isReturningStudentRef = createRef();\r\n\r\n  gradeValues = [\r\n    'Kindergarten',\r\n    '1st',\r\n    '2nd',\r\n    '3rd',\r\n    '4th',\r\n    '5th',\r\n    '6th or 7th',\r\n    '8th',\r\n    '9th, 10th, 11th, or 12th'\r\n  ];\r\n\r\n  instrumentValues = [\r\n    'Bass',\r\n    'Bassoon',\r\n    'Cello',\r\n    'Clarinet',\r\n    'Flute',\r\n    'French Horn',\r\n    'Harp',\r\n    'Oboe',\r\n    'Percussion',\r\n    'Trombone',\r\n    'Trumpet',\r\n    'Tuba/Euphonium',\r\n    'Viola',\r\n    'Violin',\r\n    'Other'\r\n  ];\r\n\r\n  schoolValues = [\r\n    'Freire Charter Middle School',\r\n    'Independence Charter School West',\r\n    'St. Francis de Sales',\r\n    'No, my student will be attending a different school'\r\n  ];\r\n\r\n  getEligibility = (grade, isReturningStudent) => {\r\n    if (isReturningStudent) return true;\r\n\r\n    switch(grade) {\r\n      case 'Kindergarten':\r\n      case '1st':\r\n      case '3rd or 4th':\r\n        return this.state.school === 'St. Francis de Sales' || this.state.school === 'Independence Charter School West';\r\n      case '5th':\r\n        return this.state.school === 'St. Francis de Sales' ||\r\n        this.state.school === 'Independence Charter School West' ||\r\n        this.state.school === 'Freire Charter Middle School' ||\r\n        this.state.yearsPlaying >= 4;\r\n      case '6th or 7th':\r\n        return this.state.school === 'Freire Charter Middle School' ||\r\n        this.state.yearsPlaying >= 4;\r\n      case '8th':\r\n      case '9th, 10th, 11th, or 12th':\r\n        return this.state.yearsPlaying >= 4;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  getDivision = (grade) => {\r\n    const alreadyPlays = this.state.alreadyPlays === 'yes';\r\n    const hasWorkingInstrumentOrInPhilly = this.state.hasWorkingInstrument === 'yes' || this.state.isInPhilly === 'yes';\r\n\r\n    if (!alreadyPlays) {\r\n      switch(grade) {\r\n        case 'Kindergarten':\r\n        case '1st':\r\n        case '2nd':\r\n          return '1A';\r\n        case '3rd':\r\n        case '4th':\r\n          return '1B';\r\n        case '5th':\r\n        case '6th or 7th':\r\n          return '1C';\r\n        default:\r\n          return null;\r\n      };\r\n    } else if (this.state.instrument === 'Bass' ||\r\n      this.state.instrument === 'Cello' ||\r\n      this.state.instrument === 'Viola' ||\r\n      this.state.instrument === 'Violin') {\r\n        switch(grade) {\r\n          case '1st':\r\n          case '2nd':\r\n            return this.state.yearsPlaying >= 1 ? '2A' : null;\r\n          case '3rd':\r\n          case '4th':\r\n            return this.state.yearsPlaying >= 1 ? '2B' : null;\r\n          case '5th':\r\n          case '6th or 7th':\r\n            return (this.state.yearsPlaying >= 3) &&\r\n            hasWorkingInstrumentOrInPhilly ? '3A' : null;\r\n          case '8th':\r\n          case '9th, 10th, 11th, or 12th':\r\n            return this.state.yearsPlaying >= 2 &&\r\n            hasWorkingInstrumentOrInPhilly ? '3C' : null;\r\n          default: \r\n            return null;\r\n        }\r\n    } else if (this.state.instrument === 'Bassoon' ||\r\n    this.state.instrument === 'Clarinet' ||\r\n    this.state.instrument === 'Flute' ||\r\n    this.state.instrument === 'French Horn' ||\r\n    this.state.instrument === 'Harp' ||\r\n    this.state.instrument === 'Oboe' ||\r\n    this.state.instrument === 'Percussion' ||\r\n    this.state.instrument === 'Trombone' ||\r\n    this.state.instrument === 'Trumpet' ||\r\n    this.state.instrument === 'Tuba/Euphonium') {\r\n      switch(grade) {\r\n        case '4th':\r\n        case '5th':\r\n        case '6th or 7th':\r\n          return (this.state.yearsPlaying >= 1) &&\r\n          hasWorkingInstrumentOrInPhilly ? '3B' : null;\r\n        case '8th':\r\n        case '9th, 10th, 11th, or 12th':\r\n          return this.state.yearsPlaying >= 2 &&\r\n          hasWorkingInstrumentOrInPhilly ? '3D' : null;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  cleanupState = () => {\r\n    const stateObj = {};\r\n    if (this.state.grade === 'Kindergarten') {\r\n      stateObj.alreadyPlays = null;\r\n      stateObj.instrument = '';\r\n      stateObj.yearsPlaying = '';\r\n      stateObj.hasWorkingInstrument = null;\r\n    }\r\n\r\n    if (this.state.alreadyPlays === 'no') {\r\n      stateObj.instrument = '';\r\n      stateObj.yearsPlaying = '';\r\n      stateObj.hasWorkingInstrument = null;\r\n    }\r\n\r\n    if (this.state.isInPhilly === 'no') {\r\n      stateObj.isReturningStudent = null;\r\n      stateObj.school = '';\r\n    }\r\n\r\n    if (Object.keys(stateObj).length > 0) this.setState(stateObj);\r\n  }\r\n\r\n  validateErrors = () => {\r\n    const {invalidInputs, ...inputState} = this.state;\r\n    let invalidInputsNew = [];\r\n\r\n    Object.keys(inputState).map((item, i) => { // eslint-disable-line\r\n      if (this[`${item}Ref`].current && !this.state[item]) {\r\n        invalidInputsNew.push(item);\r\n      }\r\n    });\r\n\r\n    return invalidInputsNew;\r\n  }\r\n\r\n  assignPlacement = () => {\r\n    const isInPhilly = this.state.isInPhilly === 'yes';\r\n    const isReturningStudent = this.state.isReturningStudent === 'yes';\r\n    const inPersonEligible = this.getEligibility(this.state.grade, isReturningStudent) && isInPhilly;\r\n    const inPersonEligibleReturning = inPersonEligible && isReturningStudent;\r\n    const division = this.getDivision(this.state.grade);\r\n    const link = () => {\r\n      if (!division) return '';\r\n\r\n      return inPersonEligibleReturning ? links[division].inPersonReturning :\r\n      inPersonEligible ? links[division].inPerson :\r\n      links[division].virtual;\r\n    }\r\n\r\n    return {\r\n      link: link(),\r\n      division,\r\n      inPersonEligible,\r\n      inPersonEligibleReturning\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const {name, value} = e.target;\r\n\r\n    if (this.state.invalidInputs.includes(name)) {\r\n      const invalidInputs = this.state.invalidInputs.filter(val => val !== name);\r\n\r\n      this.setState({\r\n        [name]: value,\r\n        invalidInputs\r\n      }, () => {\r\n        this.cleanupState();\r\n      });\r\n    } else {\r\n      this.setState({ [name]: value }, () => {\r\n        this.cleanupState();\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ invalidInputs: [] }, () => {\r\n      const errors = this.validateErrors();\r\n      if (errors.length > 0) {\r\n        this.setState({ invalidInputs: errors });\r\n      } else {\r\n        const placement = this.assignPlacement();\r\n        this.props.handleSubmit(placement);\r\n      }\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {invalidInputs} = this.state;\r\n\r\n    return (\r\n      <form className='form' onSubmit={this.handleSubmit} noValidate>\r\n        <Select\r\n          name='grade'\r\n          label='Student Grade'\r\n          values={this.gradeValues}\r\n          handleChange={this.handleChange}\r\n          isRequired\r\n          ref={this.gradeRef}\r\n          invalid={invalidInputs.includes('grade')}\r\n        />\r\n        {this.state.grade && this.state.grade !== 'Kindergarten' &&\r\n          <RadioGroup\r\n            label='Does your student already play an instrument?'\r\n            values={['yes', 'no']}\r\n            id='already-play'\r\n            name='alreadyPlays'\r\n            checked={this.state.alreadyPlays}\r\n            handleChange={this.handleChange}\r\n            isRequired\r\n            ref={this.alreadyPlaysRef}\r\n            invalid={invalidInputs.includes('alreadyPlays')}\r\n          />\r\n        }\r\n        {this.state.alreadyPlays === 'yes' &&\r\n          <Fragment>\r\n            <Select\r\n              name='instrument'\r\n              label='Select which instrument'\r\n              values={this.instrumentValues}\r\n              handleChange={this.handleChange}\r\n              isRequired\r\n              ref={this.instrumentRef}\r\n              invalid={invalidInputs.includes('instrument')}\r\n            />\r\n            <div className='form__item'>\r\n              <label htmlFor='years' className='form__label'>How long has your student been playing (# of years)?</label>\r\n              <span className='form__label' aria-hidden='true'>*</span>\r\n              <span id='years-instructions' className='form__label form__label--instructions'>If your student has been playing for less than a year, type 0</span>\r\n              <input\r\n                className='form__input'\r\n                type='number'\r\n                min=\"0\"\r\n                id='years'\r\n                name='yearsPlaying'\r\n                onChange={this.handleChange}\r\n                aria-describedby='years-instructions years-error'\r\n                ref={this.yearsPlayingRef}\r\n                aria-invalid={invalidInputs.includes('yearsPlaying')} />\r\n                {invalidInputs.includes('yearsPlaying') && <span id={`years-error`} className='form__label form__label--error'>This field is required</span>}\r\n            </div>\r\n            <RadioGroup\r\n              label='Do you have a working instrument and the needed supplies at home?'\r\n              values={['yes', 'no']}\r\n              id='working-instrument'\r\n              name='hasWorkingInstrument'\r\n              checked={this.state.hasWorkingInstrument}\r\n              handleChange={this.handleChange}\r\n              isRequired\r\n              ref={this.hasWorkingInstrumentRef}\r\n              invalid={invalidInputs.includes('hasWorkingInstrument')}\r\n            />\r\n          </Fragment>\r\n        }\r\n        <RadioGroup\r\n          label='Does your student live in the Philadelphia, PA region?'\r\n          values={['yes', 'no']}\r\n          id='in-philly'\r\n          name='isInPhilly'\r\n          checked={this.state.isInPhilly}\r\n          handleChange={this.handleChange}\r\n          isRequired\r\n          ref={this.isInPhillyRef}\r\n          invalid={invalidInputs.includes('isInPhilly')}\r\n        />\r\n        {this.state.isInPhilly === 'yes' &&\r\n          <RadioGroup\r\n            label='Is your student a returning POP student?'\r\n            instructions='Includes students who have participated in our regular, school year programming'\r\n            values={['yes', 'no']}\r\n            id='returning-student'\r\n            name='isReturningStudent'\r\n            checked={this.state.isReturningStudent}\r\n            handleChange={this.handleChange}\r\n            isRequired\r\n            ref={this.isReturningStudentRef}\r\n            invalid={invalidInputs.includes('isReturningStudent')}\r\n          />\r\n        }\r\n        {this.state.isInPhilly === 'yes' && this.state.grade && this.state.grade !== '9th, 10th, 11th, or 12th' &&\r\n          <Select\r\n            name='school'\r\n            label='Will your student be attending any of these schools?'\r\n            values={this.schoolValues}\r\n            handleChange={this.handleChange}\r\n            isRequired\r\n            ref={this.schoolRef}\r\n            invalid={invalidInputs.includes('school')}\r\n          />\r\n        }\r\n        <input className='form__button' type='submit' value='Submit' />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React, { Fragment } from 'react';\r\nimport confirmationMessages from './data/confirmationMessages.json';\r\nimport waitingListStatus from './data/waitingListStatus.json';\r\nimport schedules from './data/schedules.json';\r\n\r\nfunction Confirmation(props) {\r\n  const { division, link, inPersonEligible } = props.placement;\r\n  const { ieTitle, ineligibility } = confirmationMessages.ineligible;\r\n  const { title, eligibility1, eligibility2, schedule, inPerson, register } = confirmationMessages.eligible;\r\n  const { wlTitle, wlEligibility1, wlEligibility2, message, CTA, wlLink } = confirmationMessages.waitingList;\r\n\r\n  return (\r\n    <div className='confirmation'>\r\n      {!division &&\r\n        <Fragment>\r\n          <p className='confirmation__title'>{ieTitle}</p>\r\n          <p className='confirmation__text'>{ineligibility} <a href='mailto:michael@playonphilly.org' target='_top'>michael@playonphilly.org</a>.</p>\r\n        </Fragment>\r\n      }\r\n      {division && !waitingListStatus[division] &&\r\n        <Fragment>\r\n          <p className='confirmation__title'>{title}</p>\r\n          <p className='confirmation__text'>{eligibility1} <span className='confirmation__text confirmation__text--emphasis'>Division {division}</span> {eligibility2}.</p>\r\n          <p className='confirmation__text'>{schedule}<br />\r\n            <span className='confirmation__text confirmation__text--emphasis'>\r\n              {schedules[division].days}<br />\r\n              {schedules[division].time}\r\n            </span>\r\n          </p>\r\n          {inPersonEligible &&\r\n            <p className='confirmation__text'>{inPerson}</p>\r\n          }\r\n          <a href={link} target='_parent' className='confirmation__button'>{register}</a>\r\n        </Fragment>\r\n      }\r\n      { division && waitingListStatus[division] &&\r\n        <Fragment>\r\n          <p className='confirmation__title'>{wlTitle}</p>\r\n          <p className='confirmation__text'>{wlEligibility1} <span className='confirmation__text confirmation__text--emphasis'>Division {division}</span> {wlEligibility2}.</p>\r\n          <p className='confirmation__text'>{message}</p>\r\n          <a href={`${wlLink}`} target='_parent' className='confirmation__button'>{CTA}</a>\r\n        </Fragment>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Confirmation;","import React, { Component } from 'react';\nimport Form from './Form'\nimport Confirmation from './Confirmation';\nimport './scss/main.scss'\n\nclass App extends Component {\n  state = {\n    placement: {}\n  };\n\n  handleSubmit = (placement) => {\n    this.setState({ placement }, () => {\n      window.scroll({\n        top: 0, \n        left: 0, \n        behavior: 'smooth'\n      });\n    });\n  }\n\n  render () {\n    return (\n      <div className=\"app\">\n        <header className=\"app-header\">\n        </header>\n        {Object.keys(this.state.placement).length > 0 ?\n        <Confirmation placement={this.state.placement} /> :\n        <Form handleSubmit={this.handleSubmit} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <link href=\"https://fonts.googleapis.com/css2?family=Laila:wght@500;600;700&display=swap\" rel=\"stylesheet\"></link>\n    <link href=\"https://fonts.googleapis.com/css2?family=Mulish:wght@300;400;800;900&display=swap\" rel=\"stylesheet\"></link>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}